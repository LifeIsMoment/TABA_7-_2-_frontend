rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Admin 체크 함수 수정
    function isAdmin() {
      return request.auth != null && request.auth.token.role == 'admin';
    }

    // 인증된 사용자 체크 함수 추가
    function isAuthenticated() {
      return request.auth != null;
    }

    // Users 컬렉션
    match /users/{userId} {
      // 사용자 문서 읽기 권한
      allow read: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin());
      
      // 테스트를 위한 임시 생성 권한 (실제 운영 환경에서는 false로 설정)
      allow create: if isAdmin() || 
        (isAuthenticated() && request.auth.uid == userId);
      
      // 업데이트 권한
      allow update: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin());
      
      // 삭제 권한
      allow delete: if isAdmin();

      // 사용자 세션
      match /user_sessions/{sessionId} {
        allow read, write: if isAuthenticated() && 
          (request.auth.uid == userId || isAdmin());
      }

      // 활동 로그
      match /user_activity_logs/{logId} {
        allow read: if isAdmin();
        allow create: if isAuthenticated() && request.auth.uid == userId;
        allow write, update, delete: if false;
      }

      // 이메일 인증
      match /email_verifications/{verificationId} {
        allow create: if isAuthenticated();
        allow read, update: if isAuthenticated() && 
          request.auth.uid == userId;
        allow delete: if false;
      }
    }
  }
}